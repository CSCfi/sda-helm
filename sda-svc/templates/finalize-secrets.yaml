{{- if or (or (eq "all" .Values.global.deploymentType) (eq "internal" .Values.global.deploymentType) ) (not .Values.global.deploymentType)}}
{{- if not .Values.global.confFile }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "sda.fullname" . }}-finalize
type: Opaque
data:
  mqConnection: {{ printf "amqps://%s:%s@%s:%s/%s?" (include "mqUserFinalize" .) (include "mqPassFinalize" .) (required "A valid MQ host is required" .Values.global.broker.host) ( .Values.global.broker.port | quote | trimall "\"" ) (include "brokerVhost" .) | quote | trimall "\"" | b64enc }}
{{- if eq "verify-ca" .Values.global.db.sslMode }}
  dbConnection: {{ printf "postgres://%s:%s@%s:%s/%s?sslmode=verify-ca&sslrootcert=%s/ca.crt" (include "dbUserFinalize" .) (include "dbPassFinalize" .) (required "A valid DB host is required" .Values.global.db.host) (.Values.global.db.port | quote | trimall "\"" ) (required "A valid DB name is required" .Values.global.db.name ) (include "tlsPath" .) | quote | trimall "\"" | b64enc }}
{{ else if ( eq "verify-full" .Values.global.db.sslMode ) }}
  dbConnection: {{ printf "postgres://%s:%s@%s:%s/%s?sslmode=verify-full&sslrootcert=%s/ca.crt&sslcert=%s/finalize.crt&sslkey=%s/finalize.key" (include "dbUserFinalize" .) (include "dbPassFinalize" .) (required "A valid DB host is required" .Values.global.db.host) (.Values.global.db.port | quote | trimall "\"" ) (required "A valid DB name is required" .Values.global.db.name ) (include "tlsPath" .) (include "tlsPath" .) (include "tlsPath" .) | quote | trimall "\"" | b64enc }}
{{- end }}
{{- end }}
{{- if not .Values.global.pkiService }}
---
{{- $finalize := .Files.Glob "files/finalize*" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "sda.fullname" . }}-finalize-certs
data:
{{ ( .Files.Glob "files/ca.crt" ).AsSecrets | trim | indent 2 }}
{{ ( $finalize ).AsSecrets | indent 2 }}
{{- end }}
{{- end }}
