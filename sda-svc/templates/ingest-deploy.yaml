{{- if or (or (eq "all" .Values.global.deploymentType) (eq "internal" .Values.global.deploymentType) ) (not .Values.global.deploymentType) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "sda.fullname" . }}-ingest
  labels:
    role: ingest
    app: {{ template "sda.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: {{ .Release.Name }}-ingest
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ default "3" .Values.global.revisionHistory }}
  selector:
    matchLabels:
      app: {{ template "sda.name" . }}-ingest
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "sda.name" . }}-ingest
        role: ingest
        release: {{ .Release.Name }}
      annotations:
        {{- if not .Values.global.confFile }}
        checksum/secret: {{ include (print $.Template.BasePath "/shared-secrets.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/ingest-secrets.yaml") . | sha256sum }}
        {{- end }}
{{- if .Values.global.podAnnotations }}
{{- tpl .Values.global.podAnnotations . | nindent 8 -}}
{{- end }}
{{- if .Values.ingest.annotations }}
{{- tpl .Values.ingest.annotations . | nindent 8 -}}
{{- end }}
    spec:
    {{- if .Values.global.rbacEnabled}}
      serviceAccountName: {{ .Release.Name }}
    {{- end }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: ingest
        image: "{{ .Values.ingest.repository }}:{{ .Values.ingest.imageTag }}"
        imagePullPolicy: {{ .Values.ingest.imagePullPolicy | quote }}
        command: ["ega-ingest"]
        args: ["--log", {{ .Values.global.log | quote }} {{- if .Values.global.confFile -}} , "--conf", "{{ template "confFile" . }}" {{- end -}}]
        securityContext:
          allowPrivilegeEscalation: false
        env:
        - name: ARCHIVE_STORAGE_DRIVER
      {{- if eq "S3Storage" .Values.global.archive.storageType }}
          value: S3Storage
        - name: ARCHIVE_S3_URL
          value: {{ required "S3 archive URL missing" .Values.global.archive.s3Url }}
        - name: ARCHIVE_S3_BUCKET
          value: {{ required "S3 archive bucket missing" .Values.global.archive.s3Bucket }}
        - name: ARCHIVE_S3_REGION
          value: {{ default "us-east-1" .Values.global.archive.s3Region }}
        - name: ARCHIVE_S3_CHUNK_SIZE
          value: {{ .Values.global.archive.s3ChunkSize | mul 1048576 | quote }}
      {{- else }}
          value: "FileStorage"
        - name: ARCHIVE_LOCATION
          value: "{{ .Values.global.archive.volumePath }}/%s"
      {{- end }}
        - name: BROKER_CACERTFILE
          value: "{{ template "tlsPath" . }}/ca.crt"
        - name: BROKER_CERTFILE
          value: "{{ template "tlsPath" . }}/ingest.crt"
        - name: BROKER_KEYFILE
          value: "{{ template "tlsPath" . }}/ingest.key"
        - name: BROKER_VERIFY_HOSTNAME
          value: {{ .Values.global.broker.verifyHostname | quote }}
        - name: BROKER_VERIFY_PEER
          value: "yes"
        - name: INBOX_STORAGE_DRIVER
      {{- if eq "S3Storage" .Values.global.inbox.storageType }}
          value: S3Storage
        - name: INBOX_S3_URL
          value: {{ required "S3 inbox URL missing" .Values.global.inbox.s3Url }}
        - name: INBOX_S3_BUCKET
          value: {{ required "S3 inbox bucket missing" .Values.global.inbox.s3Bucket }}
        - name: INBOX_S3_REGION
          value: {{ default "us-east-1" .Values.global.inbox.s3Region }}
        - name: INBOX_S3_CHUNK_SIZE
          value: {{ .Values.global.inbox.s3ChunkSize | mul 1048576 | quote }}
      {{- else }}
          value: "FileStorage"
        - name: INBOX_LOCATION
          value: "{{ .Values.global.inbox.path }}/%s"
      {{- end }}
      {{- if not .Values.global.confFile }}
        - name: BROKER_CONNECTION
          valueFrom:
            secretKeyRef:
              name: {{ template "sda.fullname" . }}-ingest
              key: mqConnection
        - name: DB_CONNECTION
          valueFrom:
            secretKeyRef:
              name: {{ template "sda.fullname" . }}-ingest
              key: dbConnection
      {{- if eq "S3Storage" .Values.global.archive.storageType }}
        - name: ARCHIVE_S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "sda.fullname" . }}-s3archive-keys
              key: s3ArchiveAccessKey
        - name: ARCHIVE_S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "sda.fullname" . }}-s3archive-keys
              key: s3ArchiveSecretKey
      {{- end }}
      {{- if eq "S3Storage" .Values.global.inbox.storageType }}
        - name: INBOX_S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "sda.fullname" . }}-s3inbox-keys
              key: s3InboxAccessKey
        - name: INBOX_S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "sda.fullname" . }}-s3inbox-keys
              key: s3InboxSecretKey
      {{- end }}
      {{- end }}
        resources:
{{ toYaml .Values.ingest.resources | trim | indent 10 }}
        volumeMounts:
      {{- if not .Values.global.pkiService }}
        - name: tls
          mountPath: "{{ template "tlsPath" . }}"
      {{- end }}
      {{- if eq "FileStorage" .Values.global.archive.storageType }}
        - name: archive
          mountPath: {{ .Values.global.archive.volumePath | quote }}
      {{- end }}
      {{- if eq "FileStorage" .Values.global.inbox.storageType }}
        - name: inbox
          mountPath: {{ .Values.global.inbox.path | quote }}
      {{- end }}
      volumes:
      {{- if not .Values.global.pkiService }}
        - name: tls
          secret:
            secretName: {{ template "sda.fullname" . }}-ingest-certs
      {{- end }}
      {{- if eq "FileStorage" .Values.global.archive.storageType }}
        - name: archive
        {{- if .Values.global.archive.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.global.archive.existingClaim }}
        {{- else }}
          nfs:
            server: {{ required "An archive NFS server is required" .Values.global.archive.nfsServer | quote }}
            path: {{ if .Values.global.archive.nfsPath }}{{ .Values.global.archive.nfsPath | quote }}{{ else }}{{ "/" }}{{ end }}
        {{- end }}
      {{- end }}
      {{- if eq "FileStorage" .Values.global.inbox.storageType }}
        - name: inbox
        {{- if .Values.global.inbox.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.global.inbox.existingClaim }}
        {{- else }}
          nfs:
            server: {{ required "An inbox NFS server is required" .Values.global.inbox.nfsServer | quote }}
            path: {{ if .Values.global.inbox.nfsPath }}{{ .Values.global.inbox.nfsPath | quote }}{{ else }}{{ "/" }}{{ end }}
        {{- end }}
      {{- end }}
      restartPolicy: Always
{{- end }}
