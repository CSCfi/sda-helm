
{{- if or (or (eq "all" .Values.global.deploymentType) (eq "internal" .Values.global.deploymentType) ) (not .Values.global.deploymentType)}}
{{- if not .Values.global.confFile }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "sda.fullname" . }}-verify
type: Opaque
data:
  mqConnection: {{ printf "amqps://%s:%s@%s:%s/%s" (include "mqUserVerify" .) (include "mqPassVerify" .) (required "A valid  MQ host is required" .Values.global.broker.host) ( .Values.global.broker.port | quote | trimall "\"" ) (include "brokerVhost" .) | quote | trimall "\"" | b64enc }}
{{- if  eq "verify-ca" .Values.global.db.sslMode }}
  dbConnection: {{ printf "postgres://%s:%s@%s:%s/%s?sslmode=verify-ca&sslrootcert=%s/ca.crt"  (include "dbUserVerify" .) (include "dbPassVerify" .) (required "A valid  DB host is required"  .Values.global.db.host) (.Values.global.db.port | quote | trimall "\"" ) (required "A valid  DB name is required" .Values.global.db.name ) (include "tlsPath" .) | quote | trimall "\"" | b64enc }}
{{ else if ( eq "verify-full" .Values.global.db.sslMode ) }}
  dbConnection: {{ printf "postgres://%s:%s@%s:%s/%s?sslmode=verify-full&sslrootcert=%s/ca.crt&sslcert=%s/verify.crt&sslkey=%s/verify.key" (include "dbUserVerify" .) (include "dbPassVerify" .) (required "A valid  DB host is required" .Values.global.db.host) (.Values.global.db.port | quote | trimall "\"" ) (required "A valid  DB name is required" .Values.global.db.name ) (include "tlsPath" .) (include "tlsPath" .) (include "tlsPath" .) | quote | trimall "\"" | b64enc }}
{{- end }}
{{- end }}
{{- if not .Values.global.pkiService }}
---
{{- $verify := .Files.Glob "files/verify*" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "sda.fullname" . }}-verify-certs
data:
{{ ( .Files.Glob "files/ca.crt" ).AsSecrets | trim | indent 2 }}
{{ ( $verify ).AsSecrets | indent 2 }}
{{- end }} 
{{- end }} 
