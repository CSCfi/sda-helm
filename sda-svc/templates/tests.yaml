---
{{- if .Values.global.c4gh.publicFile  -}}

apiVersion: v1
kind: Secret
metadata:
  name: "{{ .Release.Name }}-test-certs"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
type: Opaque
data:
  {{- (.Files.Glob "files/{tester,CA,ca}*").AsSecrets | nindent 2 }}

---

apiVersion: v1
kind: Secret
metadata:
  name: "{{ .Release.Name }}-relasetest-passwords"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
type: Opaque
data:
  mqPassword: {{ include "mqPassReleaseTest" . | b64enc }}
  mqUser: {{ include "mqUserReleaseTest" . | b64enc }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Release.Name }}-test-app"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
data:
  {{- (.Files.Glob (printf "files/{trigger-ingest.py,release-test.sh,%s}" .Values.global.c4gh.publicFile)).AsConfig | nindent 2 }}

---

apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-test"
  resourceVersion: "{{ .Release.Name }}-{{ .Release.Revision }}"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "10"
spec:
  containers:
    - name: "{{ .Release.Name }}-test"
      image:  "{{ .Values.test.repository }}:{{ .Values.test.imageTag }}"
      imagePullPolicy: {{ .Values.test.imagePullPolicy | quote }}
      volumeMounts:
      {{- if not .Values.global.pkiService }}
        - name: certs
          mountPath: "/certs"
      {{- end }}
        - name: testapp
          mountPath: "/testapp"
    {{- if eq "posix" .Values.global.inbox.storageType }}
        - name: "inboxtest"
          mountPath: "/posix"
    {{- end }}
      env:
        {{- if .Values.global.pkiService }}
        - name: PKI_PATH
          value: {{include "secretsPath" }}
        {{- end }}
        - name: STORAGE_TYPE
          value: {{ required "Missing storage type for inbox" .Values.global.inbox.storageType | quote }}
      {{- if eq "s3" .Values.global.inbox.storageType }}
        - name: INBOX_BUCKET
          value: {{ required "S3 inbox bucket missing" .Values.global.inbox.s3Bucket }}
      {{- if .Values.global.inbox.s3CaFile }}
        - name: INBOX_CACERT
          value: {{ template "tlsPath" . }}/{{ .Values.global.inbox.s3CaFile }}
      {{- end }}
        - name: INBOX_REGION
          value: {{ default "us-east-1" .Values.global.inbox.s3Region }}
        - name: INBOX_URL
          value: {{ required "S3 inbox URL missing" .Values.global.inbox.s3Url }}
        - name: INBOX_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: {{ template "sda.fullname" . }}-s3inbox-keys
              key: s3InboxAccessKey
        - name: INBOX_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: {{ template "sda.fullname" . }}-s3inbox-keys
              key: s3InboxSecretKey
      {{- end }}
        {{- if eq "s3" .Values.global.inbox.storageType }}
        {{- end }}
        - name: MQ_HOST
          value: {{ required "Broker host must be set" .Values.global.broker.host | quote }}
        - name: MQ_EXCHANGE
          value: {{ default "lega" .Values.global.broker.exchange | quote }}
      {{- if not .Values.global.secretsService }}
        - name: MQ_PASSWORD
          valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-relasetest-passwords"
                key: mqPassword
        - name: MQ_USER
          valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-relasetest-passwords"
                key: mqUser
      {{- end }}
      {{- if .Values.global.broker.vhost }}
        - name: MQ_VHOST
          value: {{ .Values.global.broker.vhost | quote }}
      {{- end }}
      command: [ "/bin/sh" ]
      args:
        - "/testapp/release-test.sh"
  volumes:  
    {{- if not .Values.global.pkiService }}
      - name: certs
        projected:
          sources:
          - secret:
              name: "{{ .Release.Name }}-test-certs"
              items:
              - key: tester.ca.key
                path: tester.ca.key
              - key: tester.ca.crt
                path: tester.ca.crt
              - key: ca.crt
                path: ca.crt
    {{- end }}
    {{- if eq .Values.global.inbox.storageType "posix" }}
      - name: "inboxtest"
    {{- if .Values.global.inbox.existingClaim }}
        persistentVolumeClaim:
          claimName: {{ .Values.global.inbox.existingClaim }}
    {{- else }}
        nfs:
          server: {{ required "An inbox NFS server is required" .Values.global.inbox.nfsServer | quote }}
          path: {{ if .Values.global.inbox.nfsPath }}{{ .Values.global.inbox.nfsPath | quote}}{{ else }}{{ "/" }}{{ end }}
    {{- end }}
    {{- end }}
      - name: testapp
        projected:
          sources:
            - configMap:
                name: "{{ .Release.Name }}-test-app"
                items:
                  - key: trigger-ingest.py
                    path: trigger-ingest.py
                  - key: release-test.sh
                    path: release-test.sh
                  - key: {{ .Values.global.c4gh.publicFile | quote }}
                    path: c4gh.pub
  restartPolicy: Never

{{- /* end for only run if given publicFile */ -}}
{{- end -}}
